name: Flutter Build CI

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-project:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    - uses: subosito/flutter-action@v1
      with:
        channel: 'stable' # or: 'beta' or 'dev'
    
    # checking dart and flutter packages
    - name: run-checks
        run: |
        dart --version
        flutter --version
    
    # updating dependencies if needed
    - name: Updating Dependencies and Build App
    run: flutter pub get
    #- run: flutter test
    - run: flutter build apk

    # - name: Upload apk
    #   uses: actions/upload-artifact@v2
    #   with: 
    #     name: app-release
    #     path: build/app/outputs/apk/release/app-release.apk
    
  # release-project:
  #   name: Release apk to Github Releases
  #   runs-on: ubuntu-latest
  #   needs: build-project
  #   steps:
  #     - name: Download apk
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: app-release
  #     - name: Archieve site content
  #       uses: thedoctor0/zip-release@master
  #       with:
  #         filename: 'source-code.zip'
  #     - name: Github Release
  #       id: create-new-release
  #       uses: actions/create-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with: 
  #         tag_name: v${{ github.run_number}}
  #         release_name: Release V${{ github.run_number}}
      
  #     - name: Upload assets to Github Release
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{steps.create-new-release.outputs.upload_url}}
  #         tag_name: ${{ github.ref }}
  #         release_name: Release ${{ github.ref }}
  #         asset_path: ./source-code.zip
  #         asset_name: source-code-v${{ github.run_number }}.zip
  #         asset_content_type: application/zip
          

